/*
    Make the body cover the whole page, 
    with zero margin and padding,
    and set the font size and family of the whole page
*/
body, html {
    height: 100vh;
    margin: 0;
    padding: 0;
    font-size: 1.5vw;
    font-family: "Roboto", sans-serif;
}

/*
    Add the image to the background class, 
    center it,
    and make it fully cover its parent
*/
.background {
    background-image: url('./students-illustration.jpg');
    background-position: center;
    height: 100%;
}

/*
    The main content is a flex,
    which uses the space-around mode to justify its contents (the left and right panels),
    and aligns the start of its contents (so the titles begin at the same height),
    the height and width are set to fit the contents and never get smaller than them,
    the padding is set according to the view size,
    the margin, and the positions are set so that the div is centered,
    the background color is set to a transparent white,
    and the border radius is set to make the div look round
*/
.content {
    display: flex;
    justify-content: space-around;
    align-items: flex-start;
    height: fit-content;
    width: fit-content;
    min-width: max-content;
    min-height: max-content;
    padding: 2vh 2vw;
    margin: auto;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 5vh;
}

/*
    The buttons' margin and padding is set to give them a better look,
    and the width is set so that all the buttons have the same width,
    unless the screen is small, so the buttons will have a minimum width of their content,
    font size is set so that it will change with the base font size when the window is resized
*/
button {
    margin: 1vh 0;
    padding: 0.8vh 1vw;
    width: 6vw;
    min-width: fit-content;
    font-size: 0.75em;
}

/*
    Each panel's width is determined based on the view width (as the parent is set to fit panels),
    also the padding is set according to the view size
*/
.panel {
    width: 20vw;
    padding: 4vh 4vw;
}

/*
    The class is for a label followed by an input, which uses a flex display,
    puts an appropriate amount of gap between the label and the input box,
    and aligns the center of the label and the input to achieve a nice look
*/
.labeled {
    display: flex;
    gap: 1vw;
    align-items: center;
}

/*
    The input textbox is set to fill its parent's width, in order to make it responsive
*/
input[type=text] {
    width: 100%;
    height: 1.5em;
}

/*
    The saved answer section has a rounded boarder around it,
    the padding and margin are set according to the view size,
    and this section is hidden by default
*/
.saved-section {
    border:1px solid dimgray;
    border-radius: 1vh;
    padding: 1vh 1vw;
    margin: 6vh 0;
    display: none;
}

/*
    Make each input and paragraph have a margin at the top and bottom
*/
input, p {
    margin: 2vh 0;
}

/* 
    Make the horizontal line closer to the item at its top than the item below it
*/
hr {
    margin-bottom: 3vh;
    margin-top: 1vh;
}

/*
    The text with class info is shown in gray,
    looks smaller than the other texts,
    has a margin at its left (as it's going to be inline),
    and is hidden by default
*/
.info {
    color: dimgray;
    font-size: 0.75em;
    margin-left: 0.5vw;
    display: none;
}

/* 
    The text with class error is shown in red,
    looks smaller than the other texts,
    its font is bold,
    and is hidden by default
*/
.error {
    color: red;
    font-size: smaller;
    font-weight: bold;
    display: none;
}